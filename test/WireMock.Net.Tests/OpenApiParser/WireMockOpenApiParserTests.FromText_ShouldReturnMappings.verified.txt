[
  {
    Guid: Guid_1,
    Request: {
      Path: /v1/authorizations,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: date,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2024-06-19,
              IgnoreCase: true
            }
          ]
        },
        {
          Name: batchId,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 42,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            authorizationId: [],
            authorizationResponse: [],
            batch: {
              batchId: [],
              cycle: [],
              date: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            createdDate: [],
            currency: [],
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            preauthorizationRequestAmount: [],
            transaction: {
              amount: [],
              date: [],
              entryMethod: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              transactionId: [],
              type: []
            }
          },
          {
            authorizationId: [],
            authorizationResponse: [],
            batch: {
              batchId: [],
              cycle: [],
              date: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            createdDate: [],
            currency: [],
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            preauthorizationRequestAmount: [],
            transaction: {
              amount: [],
              date: [],
              entryMethod: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              transactionId: [],
              type: []
            }
          },
          {
            authorizationId: [],
            authorizationResponse: [],
            batch: {
              batchId: [],
              cycle: [],
              date: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            createdDate: [],
            currency: [],
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            preauthorizationRequestAmount: [],
            transaction: {
              amount: [],
              date: [],
              entryMethod: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              transactionId: [],
              type: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_2,
    Request: {
      Path: /v1/authorizations/12345,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        authorizationId: [],
        authorizationResponse: [],
        batch: {
          batchId: [],
          cycle: [],
          date: [],
          link: {
            href: [],
            method: [],
            rel: []
          }
        },
        card: {
          avsRequest: [],
          avsResponse: [],
          cardNumber: [],
          cvvPresenceIndicator: [],
          type: []
        },
        createdDate: [],
        currency: [],
        lastModifiedDate: [],
        merchant: {
          doingBusinessAs: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          merchantId: []
        },
        preauthorizationRequestAmount: [],
        transaction: {
          amount: [],
          date: [],
          entryMethod: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          transactionId: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_3,
    Request: {
      Path: /v1/bank-accounts/verify,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "processingTerminalId": "example-string",
  "bankAccount": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        processingTerminalId: [],
        verified: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_4,
    Request: {
      Path: /v1/bank-transfer-payments,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "processingTerminalId": "example-string",
  "order": {
    "orderId": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00",
    "description": "example-string",
    "amount": 42,
    "currency": "AED",
    "breakdown": {
      "subtotal": 42,
      "tip": {
        "type": "percentage",
        "mode": "prompted",
        "amount": 42,
        "percentage": 2.2
      },
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ]
    }
  },
  "customer": {
    "notificationLanguage": "en",
    "contactMethods": [
      null,
      null,
      null
    ]
  },
  "credentialOnFile": {
    "externalVault": true,
    "tokenize": true,
    "secureTokenId": "example-string",
    "mitAgreement": "unscheduled"
  },
  "paymentMethod": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        representment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        returns: [
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          }
        ],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_5,
    Request: {
      Path: /v1/bank-transfer-payments,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: processingTerminalId,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            customer: {
              contactMethods: [
                [],
                [],
                []
              ],
              notificationLanguage: []
            },
            order: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                tip: {
                  amount: [],
                  mode: [],
                  percentage: [],
                  type: []
                }
              },
              currency: [],
              dateTime: [],
              description: [],
              orderId: []
            },
            paymentId: [],
            processingTerminalId: [],
            refunds: [
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              }
            ],
            representment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            returns: [
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              },
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              },
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              }
            ],
            transactionResult: {
              authorizedAmount: [],
              currency: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            customer: {
              contactMethods: [
                [],
                [],
                []
              ],
              notificationLanguage: []
            },
            order: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                tip: {
                  amount: [],
                  mode: [],
                  percentage: [],
                  type: []
                }
              },
              currency: [],
              dateTime: [],
              description: [],
              orderId: []
            },
            paymentId: [],
            processingTerminalId: [],
            refunds: [
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              }
            ],
            representment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            returns: [
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              },
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              },
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              }
            ],
            transactionResult: {
              authorizedAmount: [],
              currency: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            customer: {
              contactMethods: [
                [],
                [],
                []
              ],
              notificationLanguage: []
            },
            order: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                tip: {
                  amount: [],
                  mode: [],
                  percentage: [],
                  type: []
                }
              },
              currency: [],
              dateTime: [],
              description: [],
              orderId: []
            },
            paymentId: [],
            processingTerminalId: [],
            refunds: [
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              }
            ],
            representment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            returns: [
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              },
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              },
              {
                date: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentId: [],
                represented: [],
                returnCode: [],
                returnReason: []
              }
            ],
            transactionResult: {
              authorizedAmount: [],
              currency: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_6,
    Request: {
      Path: /v1/bank-transfer-payments/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        representment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        returns: [
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          }
        ],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_7,
    Request: {
      Path: /v1/bank-transfer-payments/example-string/refund,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "amount": 42,
  "description": "example-string"
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        representment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        returns: [
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          }
        ],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_8,
    Request: {
      Path: /v1/bank-transfer-payments/example-string/represent,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        representment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        returns: [
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          }
        ],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_9,
    Request: {
      Path: /v1/bank-transfer-payments/example-string/reverse,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        representment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        returns: [
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          },
          {
            date: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            paymentId: [],
            represented: [],
            returnCode: [],
            returnReason: []
          }
        ],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_10,
    Request: {
      Path: /v1/bank-transfer-refunds,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "processingTerminalId": "example-string",
  "order": {
    "orderId": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00",
    "description": "example-string",
    "amount": 42,
    "currency": "AED"
  },
  "refundMethod": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_11,
    Request: {
      Path: /v1/bank-transfer-refunds,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: processingTerminalId,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            customer: {
              contactMethods: [
                [],
                [],
                []
              ],
              notificationLanguage: []
            },
            order: {
              amount: [],
              currency: [],
              dateTime: [],
              description: [],
              orderId: []
            },
            payment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            processingTerminalId: [],
            refundId: [],
            transactionResult: {
              authorizedAmount: [],
              currency: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            customer: {
              contactMethods: [
                [],
                [],
                []
              ],
              notificationLanguage: []
            },
            order: {
              amount: [],
              currency: [],
              dateTime: [],
              description: [],
              orderId: []
            },
            payment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            processingTerminalId: [],
            refundId: [],
            transactionResult: {
              authorizedAmount: [],
              currency: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            customer: {
              contactMethods: [
                [],
                [],
                []
              ],
              notificationLanguage: []
            },
            order: {
              amount: [],
              currency: [],
              dateTime: [],
              description: [],
              orderId: []
            },
            payment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            processingTerminalId: [],
            refundId: [],
            transactionResult: {
              authorizedAmount: [],
              currency: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_12,
    Request: {
      Path: /v1/bank-transfer-refunds/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_13,
    Request: {
      Path: /v1/bank-transfer-refunds/example-string/reverse,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          contactMethods: [
            [],
            [],
            []
          ],
          notificationLanguage: []
        },
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        transactionResult: {
          authorizedAmount: [],
          currency: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_14,
    Request: {
      Path: /v1/batches,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: date,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2024-06-19,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            batchId: [],
            createdDate: [],
            currency: [],
            date: [],
            heldAmount: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            returnAmount: [],
            saleAmount: [],
            transactionCount: []
          },
          {
            batchId: [],
            createdDate: [],
            currency: [],
            date: [],
            heldAmount: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            returnAmount: [],
            saleAmount: [],
            transactionCount: []
          },
          {
            batchId: [],
            createdDate: [],
            currency: [],
            date: [],
            heldAmount: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            returnAmount: [],
            saleAmount: [],
            transactionCount: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_15,
    Request: {
      Path: /v1/batches/42,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        batchId: [],
        createdDate: [],
        currency: [],
        date: [],
        heldAmount: [],
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        merchant: {
          doingBusinessAs: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          merchantId: []
        },
        returnAmount: [],
        saleAmount: [],
        transactionCount: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_16,
    Request: {
      Path: /v1/cards/balance,
      Methods: [
        POST
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "processingTerminalId": "example-string",
  "operator": "example-string",
  "currency": "AED",
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "card": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        operator: [],
        processingTerminalId: [],
        responseCode: [],
        responseMessage: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_17,
    Request: {
      Path: /v1/cards/bin-lookup,
      Methods: [
        POST
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "processingTerminalId": "example-string",
  "amount": 42,
  "currency": "AED",
  "card": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        cardNumber: [],
        country: [],
        currency: [],
        debit: [],
        surcharging: {
          allowed: [],
          amount: [],
          disclosure: [],
          percentage: []
        },
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_18,
    Request: {
      Path: /v1/cards/verify,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "processingTerminalId": "example-string",
  "operator": "example-string",
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "card": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        dateTime: [],
        operator: [],
        processingTerminalId: [],
        processorResponseCode: [],
        responseCode: [],
        responseMessage: [],
        verified: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_19,
    Request: {
      Path: /v1/contacts/42,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        contactId: [],
        contactMethods: [
          [],
          [],
          []
        ],
        firstName: [],
        identifiers: [
          {
            type: [],
            value: []
          },
          {
            type: [],
            value: []
          },
          {
            type: [],
            value: []
          }
        ],
        lastName: [],
        middleName: [],
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_20,
    Request: {
      Path: /v1/contacts/42,
      Methods: [
        PUT
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_21,
    Request: {
      Path: /v1/contacts/42,
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_22,
    Request: {
      Path: /v1/devices/example-string/payment-instructions,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "operator": "example-string",
  "processingTerminalId": "example-string",
  "order": {
    "orderId": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00",
    "description": "example-string",
    "amount": 42,
    "currency": "AED",
    "breakdown": {
      "subtotal": 42,
      "cashbackAmount": 42,
      "tip": {
        "type": "percentage",
        "mode": "prompted",
        "amount": 42,
        "percentage": 2.2
      },
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ],
      "surcharge": {
        "bypass": true,
        "amount": 42,
        "percentage": 2.2
      },
      "dualPricing": {
        "offered": true,
        "choiceRate": {
          "applied": true,
          "rate": 2.2,
          "amount": 42
        },
        "alternativeTender": "card"
      }
    }
  },
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "ipAddress": {
    "type": "ipv4",
    "value": "example-string"
  },
  "credentialOnFile": {
    "externalVault": true,
    "tokenize": true,
    "secureTokenId": "example-string",
    "mitAgreement": "unscheduled"
  },
  "customizationOptions": {
    "ebtDetails": {
      "benefitCategory": "cash",
      "withdrawal": true
    },
    "entryMethod": "deviceRead"
  },
  "autoCapture": true,
  "processAsSale": true
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 202,
      BodyAsJson: {
        errorMessage: [],
        link: {
          href: [],
          method: [],
          rel: []
        },
        paymentInstructionId: [],
        status: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_23,
    Request: {
      Path: /v1/devices/example-string/refund-instructions,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "operator": "example-string",
  "processingTerminalId": "example-string",
  "order": {
    "orderId": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00",
    "description": "example-string",
    "amount": 42,
    "currency": "AED"
  },
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "ipAddress": {
    "type": "ipv4",
    "value": "example-string"
  },
  "customizationOptions": {
    "ebtDetails": {
      "benefitCategory": "cash",
      "withdrawal": true
    },
    "entryMethod": "deviceRead"
  }
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 202,
      BodyAsJson: {
        errorMessage: [],
        link: {
          href: [],
          method: [],
          rel: []
        },
        refundInstructionId: [],
        status: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_24,
    Request: {
      Path: /v1/disputes,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: date,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2021-09-05,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            authorizationCode: [],
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            createdDate: [],
            currency: [],
            currentStatus: {
              disputeStatusId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: [],
              statusDate: []
            },
            description: [],
            disputeAmount: [],
            disputeId: [],
            disputeType: [],
            feeAmount: [],
            firstDispute: [],
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            receivedDate: [],
            referenceNumber: [],
            transaction: {
              amount: [],
              date: [],
              entryMethod: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              transactionId: [],
              type: []
            }
          },
          {
            authorizationCode: [],
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            createdDate: [],
            currency: [],
            currentStatus: {
              disputeStatusId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: [],
              statusDate: []
            },
            description: [],
            disputeAmount: [],
            disputeId: [],
            disputeType: [],
            feeAmount: [],
            firstDispute: [],
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            receivedDate: [],
            referenceNumber: [],
            transaction: {
              amount: [],
              date: [],
              entryMethod: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              transactionId: [],
              type: []
            }
          },
          {
            authorizationCode: [],
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            createdDate: [],
            currency: [],
            currentStatus: {
              disputeStatusId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: [],
              statusDate: []
            },
            description: [],
            disputeAmount: [],
            disputeId: [],
            disputeType: [],
            feeAmount: [],
            firstDispute: [],
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            receivedDate: [],
            referenceNumber: [],
            transaction: {
              amount: [],
              date: [],
              entryMethod: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              transactionId: [],
              type: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_25,
    Request: {
      Path: /v1/disputes/12345/statuses,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: [
        {
          disputeStatusId: [],
          status: [],
          statusDate: []
        },
        {
          disputeStatusId: [],
          status: [],
          statusDate: []
        },
        {
          disputeStatusId: [],
          status: [],
          statusDate: []
        }
      ],
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_26,
    Request: {
      Path: /v1/funding-accounts,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            createdDate: [],
            fundingAccountId: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            nameOnAccount: [],
            paymentMethods: [
              [],
              [],
              []
            ],
            status: [],
            type: [],
            use: []
          },
          {
            createdDate: [],
            fundingAccountId: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            nameOnAccount: [],
            paymentMethods: [
              [],
              [],
              []
            ],
            status: [],
            type: [],
            use: []
          },
          {
            createdDate: [],
            fundingAccountId: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            nameOnAccount: [],
            paymentMethods: [
              [],
              [],
              []
            ],
            status: [],
            type: [],
            use: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_27,
    Request: {
      Path: /v1/funding-accounts/42,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        createdDate: [],
        fundingAccountId: [],
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        nameOnAccount: [],
        paymentMethods: [
          [],
          [],
          []
        ],
        status: [],
        type: [],
        use: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_28,
    Request: {
      Path: /v1/funding-accounts/42,
      Methods: [
        PUT
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_29,
    Request: {
      Path: /v1/funding-accounts/42,
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_30,
    Request: {
      Path: /v1/funding-activity,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: dateFrom,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2021-09-01,
              IgnoreCase: true
            }
          ]
        },
        {
          Name: dateTo,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2021-09-30,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            amount: [],
            currency: [],
            date: [],
            description: [],
            id: [],
            merchant: [],
            recipient: [],
            type: []
          },
          {
            amount: [],
            currency: [],
            date: [],
            description: [],
            id: [],
            merchant: [],
            recipient: [],
            type: []
          },
          {
            amount: [],
            currency: [],
            date: [],
            description: [],
            id: [],
            merchant: [],
            recipient: [],
            type: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_31,
    Request: {
      Path: /v1/funding-balance,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            available: [],
            currency: [],
            funds: [],
            merchantId: [],
            pending: []
          },
          {
            available: [],
            currency: [],
            funds: [],
            merchantId: [],
            pending: []
          },
          {
            available: [],
            currency: [],
            funds: [],
            merchantId: [],
            pending: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_32,
    Request: {
      Path: /v1/funding-instructions,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        createdDate: [],
        instructionId: [],
        lastModifiedDate: [],
        merchants: [
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchantId: [],
            recipients: [
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              }
            ]
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchantId: [],
            recipients: [
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              }
            ]
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchantId: [],
            recipients: [
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              }
            ]
          }
        ],
        status: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_33,
    Request: {
      Path: /v1/funding-instructions,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: dateFrom,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2021-09-01,
              IgnoreCase: true
            }
          ]
        },
        {
          Name: dateTo,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2021-09-30,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            createdDate: [],
            instructionId: [],
            lastModifiedDate: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchants: [
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              }
            ],
            status: []
          },
          {
            createdDate: [],
            instructionId: [],
            lastModifiedDate: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchants: [
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              }
            ],
            status: []
          },
          {
            createdDate: [],
            instructionId: [],
            lastModifiedDate: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchants: [
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                merchantId: [],
                recipients: [
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  },
                  {
                    amount: {
                      currency: [],
                      value: []
                    },
                    fundingAccountId: [],
                    link: {
                      href: [],
                      method: [],
                      rel: []
                    },
                    paymentMethod: [],
                    status: []
                  }
                ]
              }
            ],
            status: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_34,
    Request: {
      Path: /v1/funding-instructions/{instructionId},
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        createdDate: [],
        instructionId: [],
        lastModifiedDate: [],
        merchants: [
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchantId: [],
            recipients: [
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              }
            ]
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchantId: [],
            recipients: [
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              }
            ]
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            merchantId: [],
            recipients: [
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              },
              {
                amount: {
                  currency: [],
                  value: []
                },
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                paymentMethod: [],
                status: []
              }
            ]
          }
        ],
        status: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_35,
    Request: {
      Path: /v1/funding-instructions/{instructionId},
      Methods: [
        PUT
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_36,
    Request: {
      Path: /v1/funding-instructions/{instructionId},
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_37,
    Request: {
      Path: /v1/funding-recipients,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        charityId: [],
        contactMethods: [
          [],
          [],
          []
        ],
        createdDate: [],
        doingBuinessAs: [],
        fundingAccounts: [
          {
            fundingAccountId: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            status: []
          },
          {
            fundingAccountId: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            status: []
          },
          {
            fundingAccountId: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            status: []
          }
        ],
        lastModifiedDate: [],
        owners: [
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          }
        ],
        recipientId: [],
        recipientType: [],
        status: [],
        taxId: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_38,
    Request: {
      Path: /v1/funding-recipients,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            charityId: [],
            contactMethods: [
              [],
              [],
              []
            ],
            createdDate: [],
            doingBuinessAs: [],
            fundingAccounts: [
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              },
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              },
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              }
            ],
            lastModifiedDate: [],
            owners: [
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              }
            ],
            recipientId: [],
            recipientType: [],
            status: [],
            taxId: []
          },
          {
            charityId: [],
            contactMethods: [
              [],
              [],
              []
            ],
            createdDate: [],
            doingBuinessAs: [],
            fundingAccounts: [
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              },
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              },
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              }
            ],
            lastModifiedDate: [],
            owners: [
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              }
            ],
            recipientId: [],
            recipientType: [],
            status: [],
            taxId: []
          },
          {
            charityId: [],
            contactMethods: [
              [],
              [],
              []
            ],
            createdDate: [],
            doingBuinessAs: [],
            fundingAccounts: [
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              },
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              },
              {
                fundingAccountId: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                status: []
              }
            ],
            lastModifiedDate: [],
            owners: [
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              }
            ],
            recipientId: [],
            recipientType: [],
            status: [],
            taxId: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_39,
    Request: {
      Path: /v1/funding-recipients/42,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        charityId: [],
        contactMethods: [
          [],
          [],
          []
        ],
        createdDate: [],
        doingBuinessAs: [],
        fundingAccounts: [
          {
            fundingAccountId: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            status: []
          },
          {
            fundingAccountId: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            status: []
          },
          {
            fundingAccountId: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            status: []
          }
        ],
        lastModifiedDate: [],
        owners: [
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          }
        ],
        recipientId: [],
        recipientType: [],
        status: [],
        taxId: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_40,
    Request: {
      Path: /v1/funding-recipients/42,
      Methods: [
        PUT
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_41,
    Request: {
      Path: /v1/funding-recipients/42,
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_42,
    Request: {
      Path: /v1/funding-recipients/42/funding-accounts,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: [
        {
          createdDate: [],
          fundingAccountId: [],
          lastModifiedDate: [],
          links: [
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            }
          ],
          nameOnAccount: [],
          paymentMethods: [
            [],
            [],
            []
          ],
          status: [],
          type: [],
          use: []
        },
        {
          createdDate: [],
          fundingAccountId: [],
          lastModifiedDate: [],
          links: [
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            }
          ],
          nameOnAccount: [],
          paymentMethods: [
            [],
            [],
            []
          ],
          status: [],
          type: [],
          use: []
        },
        {
          createdDate: [],
          fundingAccountId: [],
          lastModifiedDate: [],
          links: [
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            }
          ],
          nameOnAccount: [],
          paymentMethods: [
            [],
            [],
            []
          ],
          status: [],
          type: [],
          use: []
        }
      ],
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_43,
    Request: {
      Path: /v1/funding-recipients/42/funding-accounts,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        createdDate: [],
        fundingAccountId: [],
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        nameOnAccount: [],
        paymentMethods: [
          [],
          [],
          []
        ],
        status: [],
        type: [],
        use: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_44,
    Request: {
      Path: /v1/funding-recipients/42/owners,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: [
        {
          address: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          identifiers: [
            {
              type: [],
              value: []
            },
            {
              type: [],
              value: []
            },
            {
              type: [],
              value: []
            }
          ],
          lastName: [],
          middleName: [],
          ownerId: [],
          relationship: {
            equityPercentage: [],
            isAuthorizedSignatory: [],
            isControlProng: [],
            title: []
          }
        },
        {
          address: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          identifiers: [
            {
              type: [],
              value: []
            },
            {
              type: [],
              value: []
            },
            {
              type: [],
              value: []
            }
          ],
          lastName: [],
          middleName: [],
          ownerId: [],
          relationship: {
            equityPercentage: [],
            isAuthorizedSignatory: [],
            isControlProng: [],
            title: []
          }
        },
        {
          address: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          identifiers: [
            {
              type: [],
              value: []
            },
            {
              type: [],
              value: []
            },
            {
              type: [],
              value: []
            }
          ],
          lastName: [],
          middleName: [],
          ownerId: [],
          relationship: {
            equityPercentage: [],
            isAuthorizedSignatory: [],
            isControlProng: [],
            title: []
          }
        }
      ],
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_45,
    Request: {
      Path: /v1/funding-recipients/42/owners,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        address: {
          address1: [],
          address2: [],
          address3: [],
          city: [],
          country: [],
          postalCode: [],
          state: []
        },
        contactMethods: [
          [],
          [],
          []
        ],
        dateOfBirth: [],
        firstName: [],
        identifiers: [
          {
            type: [],
            value: []
          },
          {
            type: [],
            value: []
          },
          {
            type: [],
            value: []
          }
        ],
        lastName: [],
        middleName: [],
        ownerId: [],
        relationship: {
          equityPercentage: [],
          isAuthorizedSignatory: [],
          isControlProng: [],
          title: []
        }
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_46,
    Request: {
      Path: /v1/fx-rates,
      Methods: [
        POST
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "channel": "pos",
  "processingTerminalId": "example-string",
  "operator": "example-string",
  "baseAmount": 42,
  "baseCurrency": "AED",
  "paymentMethod": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        baseAmount: [],
        baseCurrency: [],
        cardInfo: {
          cardNumber: [],
          country: [],
          currency: [],
          debit: [],
          surcharging: {
            allowed: [],
            amount: [],
            disclosure: [],
            percentage: []
          },
          type: []
        },
        dccOffer: {
          accepted: [],
          fxAmount: [],
          fxCurrency: [],
          fxCurrencyCode: [],
          fxCurrencyExponent: [],
          fxRate: [],
          markup: [],
          markupText: [],
          offerReference: [],
          provider: [],
          source: []
        },
        inquiryResult: {
          causeOfRejection: [],
          dccOffered: []
        },
        operator: [],
        processingTerminalId: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_47,
    Request: {
      Path: /v1/merchant-platforms,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        business: {
          addresses: [
            [],
            [],
            []
          ],
          contactMethods: [
            [],
            [],
            []
          ],
          countryOfOperation: [],
          name: [],
          organizationType: [],
          taxId: []
        },
        createdDate: [],
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        merchantPlatformId: [],
        processingAccounts: [
          {
            doingBusinessAs: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            processingAccountId: [],
            status: []
          },
          {
            doingBusinessAs: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            processingAccountId: [],
            status: []
          },
          {
            doingBusinessAs: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            processingAccountId: [],
            status: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_48,
    Request: {
      Path: /v1/merchant-platforms,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            business: {
              addresses: [
                [],
                [],
                []
              ],
              contactMethods: [
                [],
                [],
                []
              ],
              countryOfOperation: [],
              name: [],
              organizationType: [],
              taxId: []
            },
            createdDate: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchantPlatformId: [],
            processingAccounts: [
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              },
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              },
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              }
            ]
          },
          {
            business: {
              addresses: [
                [],
                [],
                []
              ],
              contactMethods: [
                [],
                [],
                []
              ],
              countryOfOperation: [],
              name: [],
              organizationType: [],
              taxId: []
            },
            createdDate: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchantPlatformId: [],
            processingAccounts: [
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              },
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              },
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              }
            ]
          },
          {
            business: {
              addresses: [
                [],
                [],
                []
              ],
              contactMethods: [
                [],
                [],
                []
              ],
              countryOfOperation: [],
              name: [],
              organizationType: [],
              taxId: []
            },
            createdDate: [],
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchantPlatformId: [],
            processingAccounts: [
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              },
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              },
              {
                doingBusinessAs: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                processingAccountId: [],
                status: []
              }
            ]
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_49,
    Request: {
      Path: /v1/merchant-platforms/12345,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        business: {
          addresses: [
            [],
            [],
            []
          ],
          contactMethods: [
            [],
            [],
            []
          ],
          countryOfOperation: [],
          name: [],
          organizationType: [],
          taxId: []
        },
        createdDate: [],
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        merchantPlatformId: [],
        processingAccounts: [
          {
            doingBusinessAs: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            processingAccountId: [],
            status: []
          },
          {
            doingBusinessAs: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            processingAccountId: [],
            status: []
          },
          {
            doingBusinessAs: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            processingAccountId: [],
            status: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_50,
    Request: {
      Path: /v1/merchant-platforms/12345/processing-accounts,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            businessStartDate: [],
            businessType: [],
            categoryCode: [],
            contactMethods: [
              [],
              [],
              []
            ],
            contacts: [
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              },
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              },
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              }
            ],
            createdDate: [],
            doingBusinessAs: [],
            funding: {
              acceleratedFundingFee: [],
              dailyDiscount: [],
              fundingAccounts: [
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                },
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                },
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                }
              ],
              fundingSchedule: [],
              status: []
            },
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchandiseOrServiceSold: [],
            owners: [
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              }
            ],
            pricing: {
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            processing: {
              ach: {
                estimatedMonthlyTransactions: [],
                limits: {
                  dailyDeposit: [],
                  monthlyDeposit: [],
                  singleTransaction: []
                },
                naics: [],
                previouslyTerminatedForAch: [],
                refunds: {
                  refundPolicyUrl: [],
                  writtenRefundPolicy: []
                },
                transactionTypes: [
                  [],
                  [],
                  []
                ],
                transactionTypesOther: []
              },
              cardAcceptance: {
                cardsAccepted: [
                  [],
                  [],
                  []
                ],
                debitOnly: [],
                specialityCards: {
                  americanExpressDirect: {
                    enabled: [],
                    merchantNumber: []
                  },
                  electronicBenefitsTransfer: {
                    enabled: [],
                    fnsNumber: []
                  },
                  other: {
                    fleetMerchantId: [],
                    voyagerMerchantId: [],
                    wexMerchantNumber: []
                  }
                }
              },
              isSeasonal: [],
              merchantId: [],
              monthlyAmounts: {
                average: [],
                highest: []
              },
              monthsOfOperation: [
                [],
                [],
                []
              ],
              transactionAmounts: {
                average: [],
                highest: []
              },
              volumeBreakdown: {
                cardPresentKeyed: [],
                cardPresentSwiped: [],
                ecommerce: [],
                mailOrTelephone: []
              }
            },
            processingAccountId: [],
            status: [],
            timezone: [],
            website: []
          },
          {
            businessStartDate: [],
            businessType: [],
            categoryCode: [],
            contactMethods: [
              [],
              [],
              []
            ],
            contacts: [
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              },
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              },
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              }
            ],
            createdDate: [],
            doingBusinessAs: [],
            funding: {
              acceleratedFundingFee: [],
              dailyDiscount: [],
              fundingAccounts: [
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                },
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                },
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                }
              ],
              fundingSchedule: [],
              status: []
            },
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchandiseOrServiceSold: [],
            owners: [
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              }
            ],
            pricing: {
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            processing: {
              ach: {
                estimatedMonthlyTransactions: [],
                limits: {
                  dailyDeposit: [],
                  monthlyDeposit: [],
                  singleTransaction: []
                },
                naics: [],
                previouslyTerminatedForAch: [],
                refunds: {
                  refundPolicyUrl: [],
                  writtenRefundPolicy: []
                },
                transactionTypes: [
                  [],
                  [],
                  []
                ],
                transactionTypesOther: []
              },
              cardAcceptance: {
                cardsAccepted: [
                  [],
                  [],
                  []
                ],
                debitOnly: [],
                specialityCards: {
                  americanExpressDirect: {
                    enabled: [],
                    merchantNumber: []
                  },
                  electronicBenefitsTransfer: {
                    enabled: [],
                    fnsNumber: []
                  },
                  other: {
                    fleetMerchantId: [],
                    voyagerMerchantId: [],
                    wexMerchantNumber: []
                  }
                }
              },
              isSeasonal: [],
              merchantId: [],
              monthlyAmounts: {
                average: [],
                highest: []
              },
              monthsOfOperation: [
                [],
                [],
                []
              ],
              transactionAmounts: {
                average: [],
                highest: []
              },
              volumeBreakdown: {
                cardPresentKeyed: [],
                cardPresentSwiped: [],
                ecommerce: [],
                mailOrTelephone: []
              }
            },
            processingAccountId: [],
            status: [],
            timezone: [],
            website: []
          },
          {
            businessStartDate: [],
            businessType: [],
            categoryCode: [],
            contactMethods: [
              [],
              [],
              []
            ],
            contacts: [
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              },
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              },
              {
                contactId: [],
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                }
              }
            ],
            createdDate: [],
            doingBusinessAs: [],
            funding: {
              acceleratedFundingFee: [],
              dailyDiscount: [],
              fundingAccounts: [
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                },
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                },
                {
                  fundingAccountId: [],
                  link: {
                    href: [],
                    method: [],
                    rel: []
                  },
                  status: []
                }
              ],
              fundingSchedule: [],
              status: []
            },
            lastModifiedDate: [],
            links: [
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              },
              {
                href: [],
                method: [],
                rel: []
              }
            ],
            merchandiseOrServiceSold: [],
            owners: [
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              },
              {
                firstName: [],
                lastName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                ownerId: []
              }
            ],
            pricing: {
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            processing: {
              ach: {
                estimatedMonthlyTransactions: [],
                limits: {
                  dailyDeposit: [],
                  monthlyDeposit: [],
                  singleTransaction: []
                },
                naics: [],
                previouslyTerminatedForAch: [],
                refunds: {
                  refundPolicyUrl: [],
                  writtenRefundPolicy: []
                },
                transactionTypes: [
                  [],
                  [],
                  []
                ],
                transactionTypesOther: []
              },
              cardAcceptance: {
                cardsAccepted: [
                  [],
                  [],
                  []
                ],
                debitOnly: [],
                specialityCards: {
                  americanExpressDirect: {
                    enabled: [],
                    merchantNumber: []
                  },
                  electronicBenefitsTransfer: {
                    enabled: [],
                    fnsNumber: []
                  },
                  other: {
                    fleetMerchantId: [],
                    voyagerMerchantId: [],
                    wexMerchantNumber: []
                  }
                }
              },
              isSeasonal: [],
              merchantId: [],
              monthlyAmounts: {
                average: [],
                highest: []
              },
              monthsOfOperation: [
                [],
                [],
                []
              ],
              transactionAmounts: {
                average: [],
                highest: []
              },
              volumeBreakdown: {
                cardPresentKeyed: [],
                cardPresentSwiped: [],
                ecommerce: [],
                mailOrTelephone: []
              }
            },
            processingAccountId: [],
            status: [],
            timezone: [],
            website: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_51,
    Request: {
      Path: /v1/merchant-platforms/12345/processing-accounts,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        businessStartDate: [],
        businessType: [],
        categoryCode: [],
        contactMethods: [
          [],
          [],
          []
        ],
        contacts: [
          {
            contactId: [],
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            }
          },
          {
            contactId: [],
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            }
          },
          {
            contactId: [],
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            }
          }
        ],
        createdDate: [],
        doingBusinessAs: [],
        funding: {
          acceleratedFundingFee: [],
          dailyDiscount: [],
          fundingAccounts: [
            {
              fundingAccountId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: []
            },
            {
              fundingAccountId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: []
            },
            {
              fundingAccountId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: []
            }
          ],
          fundingSchedule: [],
          status: []
        },
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        merchandiseOrServiceSold: [],
        owners: [
          {
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          }
        ],
        pricing: {
          link: {
            href: [],
            method: [],
            rel: []
          }
        },
        processing: {
          ach: {
            estimatedMonthlyTransactions: [],
            limits: {
              dailyDeposit: [],
              monthlyDeposit: [],
              singleTransaction: []
            },
            naics: [],
            previouslyTerminatedForAch: [],
            refunds: {
              refundPolicyUrl: [],
              writtenRefundPolicy: []
            },
            transactionTypes: [
              [],
              [],
              []
            ],
            transactionTypesOther: []
          },
          cardAcceptance: {
            cardsAccepted: [
              [],
              [],
              []
            ],
            debitOnly: [],
            specialityCards: {
              americanExpressDirect: {
                enabled: [],
                merchantNumber: []
              },
              electronicBenefitsTransfer: {
                enabled: [],
                fnsNumber: []
              },
              other: {
                fleetMerchantId: [],
                voyagerMerchantId: [],
                wexMerchantNumber: []
              }
            }
          },
          isSeasonal: [],
          merchantId: [],
          monthlyAmounts: {
            average: [],
            highest: []
          },
          monthsOfOperation: [
            [],
            [],
            []
          ],
          transactionAmounts: {
            average: [],
            highest: []
          },
          volumeBreakdown: {
            cardPresentKeyed: [],
            cardPresentSwiped: [],
            ecommerce: [],
            mailOrTelephone: []
          }
        },
        processingAccountId: [],
        status: [],
        timezone: [],
        website: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_52,
    Request: {
      Path: /v1/owners/42,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        address: {
          address1: [],
          address2: [],
          address3: [],
          city: [],
          country: [],
          postalCode: [],
          state: []
        },
        contactMethods: [
          [],
          [],
          []
        ],
        dateOfBirth: [],
        firstName: [],
        identifiers: [
          {
            type: [],
            value: []
          },
          {
            type: [],
            value: []
          },
          {
            type: [],
            value: []
          }
        ],
        lastName: [],
        middleName: [],
        ownerId: [],
        relationship: {
          equityPercentage: [],
          isAuthorizedSignatory: [],
          isControlProng: [],
          title: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_53,
    Request: {
      Path: /v1/owners/42,
      Methods: [
        PUT
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_54,
    Request: {
      Path: /v1/owners/42,
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_55,
    Request: {
      Path: /v1/payment-instructions/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        errorMessage: [],
        link: {
          href: [],
          method: [],
          rel: []
        },
        paymentInstructionId: [],
        status: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_56,
    Request: {
      Path: /v1/payments,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "channel": "pos",
  "processingTerminalId": "example-string",
  "operator": "example-string",
  "order": {
    "orderId": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00",
    "description": "example-string",
    "amount": 42,
    "currency": "AED",
    "breakdown": {
      "subtotal": 42,
      "cashbackAmount": 42,
      "tip": {
        "type": "percentage",
        "mode": "prompted",
        "amount": 42,
        "percentage": 2.2
      },
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ],
      "surcharge": {
        "bypass": true,
        "amount": 42,
        "percentage": 2.2
      },
      "dualPricing": {
        "offered": true,
        "choiceRate": {
          "applied": true,
          "rate": 2.2,
          "amount": 42
        },
        "alternativeTender": "card"
      },
      "dutyAmount": 42,
      "freightAmount": 42,
      "convenienceFee": {
        "amount": 42
      },
      "items": [
        {
          "commodityCode": "example-string",
          "productCode": "example-string",
          "description": "example-string",
          "unitOfMeasure": "ACR",
          "unitPrice": 2.2,
          "quantity": 2.2,
          "discountRate": 2.2,
          "taxes": [
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            },
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            },
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            }
          ]
        },
        {
          "commodityCode": "example-string",
          "productCode": "example-string",
          "description": "example-string",
          "unitOfMeasure": "ACR",
          "unitPrice": 2.2,
          "quantity": 2.2,
          "discountRate": 2.2,
          "taxes": [
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            },
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            },
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            }
          ]
        },
        {
          "commodityCode": "example-string",
          "productCode": "example-string",
          "description": "example-string",
          "unitOfMeasure": "ACR",
          "unitPrice": 2.2,
          "quantity": 2.2,
          "discountRate": 2.2,
          "taxes": [
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            },
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            },
            {
              "name": "example-string",
              "rate": 2.2,
              "amount": 42
            }
          ]
        }
      ]
    },
    "dccOffer": {
      "accepted": true,
      "offerReference": "example-string",
      "fxAmount": 42,
      "fxCurrency": "AED",
      "fxCurrencyCode": "example-string",
      "fxCurrencyExponent": 42,
      "fxRate": 2.2,
      "markup": 2.2,
      "markupText": "example-string",
      "provider": "example-string",
      "source": "example-string"
    },
    "standingInstructions": {
      "sequence": "first",
      "processingModel": "unscheduled",
      "referenceDataOfFirstTxn": {
        "paymentId": "example-string",
        "cardSchemeReferenceId": "example-string"
      }
    }
  },
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "ipAddress": {
    "type": "ipv4",
    "value": "example-string"
  },
  "paymentMethod": {},
  "threeDSecure": {},
  "credentialOnFile": {
    "externalVault": true,
    "tokenize": true,
    "secureTokenId": "example-string",
    "mitAgreement": "unscheduled"
  },
  "offlineProcessing": {
    "operation": "offlineDecline",
    "approvalCode": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00"
  },
  "autoCapture": true,
  "processAsSale": true
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          breakdown: {
            cashbackAmount: [],
            convenienceFee: {
              amount: []
            },
            dualPricing: {
              alternativeTender: [],
              choiceRate: {
                amount: [],
                applied: [],
                rate: []
              },
              offered: []
            },
            dutyAmount: [],
            freightAmount: [],
            items: [
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              }
            ],
            subtotal: [],
            surcharge: {
              amount: [],
              bypass: [],
              percentage: []
            },
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: [],
          standingInstructions: {
            processingModel: [],
            referenceDataOfFirstTxn: {
              cardSchemeReferenceId: [],
              paymentId: []
            },
            sequence: []
          }
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_57,
    Request: {
      Path: /v1/payments,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            card: {
              balances: [
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                }
              ],
              cardholderName: [],
              cardholderSignature: [],
              cardNumber: [],
              emvTags: [
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                }
              ],
              entryMethod: [],
              expiryDate: [],
              secureToken: {
                customerName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                secureTokenId: [],
                status: [],
                token: []
              },
              securityChecks: {
                avsResult: [],
                cvvResult: []
              },
              type: []
            },
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            operator: [],
            order: {
              amount: [],
              breakdown: {
                cashbackAmount: [],
                convenienceFee: {
                  amount: []
                },
                dualPricing: {
                  alternativeTender: [],
                  choiceRate: {
                    amount: [],
                    applied: [],
                    rate: []
                  },
                  offered: []
                },
                dutyAmount: [],
                freightAmount: [],
                items: [
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  },
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  },
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  }
                ],
                subtotal: [],
                surcharge: {
                  amount: [],
                  bypass: [],
                  percentage: []
                },
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                tip: {
                  amount: [],
                  mode: [],
                  percentage: [],
                  type: []
                }
              },
              currency: [],
              dateTime: [],
              dccOffer: {
                accepted: [],
                fxAmount: [],
                fxCurrency: [],
                fxCurrencyCode: [],
                fxCurrencyExponent: [],
                fxRate: [],
                markup: [],
                markupText: [],
                offerReference: [],
                provider: [],
                source: []
              },
              description: [],
              orderId: [],
              standingInstructions: {
                processingModel: [],
                referenceDataOfFirstTxn: {
                  cardSchemeReferenceId: [],
                  paymentId: []
                },
                sequence: []
              }
            },
            paymentId: [],
            processingTerminalId: [],
            refunds: [
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              }
            ],
            supportedOperations: [
              [],
              [],
              []
            ],
            transactionResult: {
              approvalCode: [],
              authorizedAmount: [],
              cardSchemeReferenceId: [],
              currency: [],
              ebtType: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            card: {
              balances: [
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                }
              ],
              cardholderName: [],
              cardholderSignature: [],
              cardNumber: [],
              emvTags: [
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                }
              ],
              entryMethod: [],
              expiryDate: [],
              secureToken: {
                customerName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                secureTokenId: [],
                status: [],
                token: []
              },
              securityChecks: {
                avsResult: [],
                cvvResult: []
              },
              type: []
            },
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            operator: [],
            order: {
              amount: [],
              breakdown: {
                cashbackAmount: [],
                convenienceFee: {
                  amount: []
                },
                dualPricing: {
                  alternativeTender: [],
                  choiceRate: {
                    amount: [],
                    applied: [],
                    rate: []
                  },
                  offered: []
                },
                dutyAmount: [],
                freightAmount: [],
                items: [
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  },
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  },
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  }
                ],
                subtotal: [],
                surcharge: {
                  amount: [],
                  bypass: [],
                  percentage: []
                },
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                tip: {
                  amount: [],
                  mode: [],
                  percentage: [],
                  type: []
                }
              },
              currency: [],
              dateTime: [],
              dccOffer: {
                accepted: [],
                fxAmount: [],
                fxCurrency: [],
                fxCurrencyCode: [],
                fxCurrencyExponent: [],
                fxRate: [],
                markup: [],
                markupText: [],
                offerReference: [],
                provider: [],
                source: []
              },
              description: [],
              orderId: [],
              standingInstructions: {
                processingModel: [],
                referenceDataOfFirstTxn: {
                  cardSchemeReferenceId: [],
                  paymentId: []
                },
                sequence: []
              }
            },
            paymentId: [],
            processingTerminalId: [],
            refunds: [
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              }
            ],
            supportedOperations: [
              [],
              [],
              []
            ],
            transactionResult: {
              approvalCode: [],
              authorizedAmount: [],
              cardSchemeReferenceId: [],
              currency: [],
              ebtType: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            card: {
              balances: [
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                }
              ],
              cardholderName: [],
              cardholderSignature: [],
              cardNumber: [],
              emvTags: [
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                }
              ],
              entryMethod: [],
              expiryDate: [],
              secureToken: {
                customerName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                secureTokenId: [],
                status: [],
                token: []
              },
              securityChecks: {
                avsResult: [],
                cvvResult: []
              },
              type: []
            },
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            operator: [],
            order: {
              amount: [],
              breakdown: {
                cashbackAmount: [],
                convenienceFee: {
                  amount: []
                },
                dualPricing: {
                  alternativeTender: [],
                  choiceRate: {
                    amount: [],
                    applied: [],
                    rate: []
                  },
                  offered: []
                },
                dutyAmount: [],
                freightAmount: [],
                items: [
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  },
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  },
                  {
                    commodityCode: [],
                    description: [],
                    discountRate: [],
                    productCode: [],
                    quantity: [],
                    taxes: [
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      },
                      {
                        amount: [],
                        name: [],
                        rate: []
                      }
                    ],
                    unitOfMeasure: [],
                    unitPrice: []
                  }
                ],
                subtotal: [],
                surcharge: {
                  amount: [],
                  bypass: [],
                  percentage: []
                },
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                tip: {
                  amount: [],
                  mode: [],
                  percentage: [],
                  type: []
                }
              },
              currency: [],
              dateTime: [],
              dccOffer: {
                accepted: [],
                fxAmount: [],
                fxCurrency: [],
                fxCurrencyCode: [],
                fxCurrencyExponent: [],
                fxRate: [],
                markup: [],
                markupText: [],
                offerReference: [],
                provider: [],
                source: []
              },
              description: [],
              orderId: [],
              standingInstructions: {
                processingModel: [],
                referenceDataOfFirstTxn: {
                  cardSchemeReferenceId: [],
                  paymentId: []
                },
                sequence: []
              }
            },
            paymentId: [],
            processingTerminalId: [],
            refunds: [
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              },
              {
                amount: [],
                currency: [],
                dateTime: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                refundId: [],
                responseCode: [],
                responseMessage: [],
                status: []
              }
            ],
            supportedOperations: [
              [],
              [],
              []
            ],
            transactionResult: {
              approvalCode: [],
              authorizedAmount: [],
              cardSchemeReferenceId: [],
              currency: [],
              ebtType: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_58,
    Request: {
      Path: /v1/payments/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          breakdown: {
            cashbackAmount: [],
            convenienceFee: {
              amount: []
            },
            dualPricing: {
              alternativeTender: [],
              choiceRate: {
                amount: [],
                applied: [],
                rate: []
              },
              offered: []
            },
            dutyAmount: [],
            freightAmount: [],
            items: [
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              }
            ],
            subtotal: [],
            surcharge: {
              amount: [],
              bypass: [],
              percentage: []
            },
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: [],
          standingInstructions: {
            processingModel: [],
            referenceDataOfFirstTxn: {
              cardSchemeReferenceId: [],
              paymentId: []
            },
            sequence: []
          }
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_59,
    Request: {
      Path: /v1/payments/example-string/adjust,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "operator": "example-string",
  "adjustments": [
    null,
    null,
    null
  ]
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          breakdown: {
            cashbackAmount: [],
            convenienceFee: {
              amount: []
            },
            dualPricing: {
              alternativeTender: [],
              choiceRate: {
                amount: [],
                applied: [],
                rate: []
              },
              offered: []
            },
            dutyAmount: [],
            freightAmount: [],
            items: [
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              }
            ],
            subtotal: [],
            surcharge: {
              amount: [],
              bypass: [],
              percentage: []
            },
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: [],
          standingInstructions: {
            processingModel: [],
            referenceDataOfFirstTxn: {
              cardSchemeReferenceId: [],
              paymentId: []
            },
            sequence: []
          }
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_60,
    Request: {
      Path: /v1/payments/example-string/capture,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          breakdown: {
            cashbackAmount: [],
            convenienceFee: {
              amount: []
            },
            dualPricing: {
              alternativeTender: [],
              choiceRate: {
                amount: [],
                applied: [],
                rate: []
              },
              offered: []
            },
            dutyAmount: [],
            freightAmount: [],
            items: [
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              }
            ],
            subtotal: [],
            surcharge: {
              amount: [],
              bypass: [],
              percentage: []
            },
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: [],
          standingInstructions: {
            processingModel: [],
            referenceDataOfFirstTxn: {
              cardSchemeReferenceId: [],
              paymentId: []
            },
            sequence: []
          }
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_61,
    Request: {
      Path: /v1/payments/example-string/refund,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "operator": "example-string",
  "amount": 42,
  "description": "example-string"
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          breakdown: {
            cashbackAmount: [],
            convenienceFee: {
              amount: []
            },
            dualPricing: {
              alternativeTender: [],
              choiceRate: {
                amount: [],
                applied: [],
                rate: []
              },
              offered: []
            },
            dutyAmount: [],
            freightAmount: [],
            items: [
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              }
            ],
            subtotal: [],
            surcharge: {
              amount: [],
              bypass: [],
              percentage: []
            },
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: [],
          standingInstructions: {
            processingModel: [],
            referenceDataOfFirstTxn: {
              cardSchemeReferenceId: [],
              paymentId: []
            },
            sequence: []
          }
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_62,
    Request: {
      Path: /v1/payments/example-string/reverse,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          breakdown: {
            cashbackAmount: [],
            convenienceFee: {
              amount: []
            },
            dualPricing: {
              alternativeTender: [],
              choiceRate: {
                amount: [],
                applied: [],
                rate: []
              },
              offered: []
            },
            dutyAmount: [],
            freightAmount: [],
            items: [
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              },
              {
                commodityCode: [],
                description: [],
                discountRate: [],
                productCode: [],
                quantity: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ],
                unitOfMeasure: [],
                unitPrice: []
              }
            ],
            subtotal: [],
            surcharge: {
              amount: [],
              bypass: [],
              percentage: []
            },
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ],
            tip: {
              amount: [],
              mode: [],
              percentage: [],
              type: []
            }
          },
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: [],
          standingInstructions: {
            processingModel: [],
            referenceDataOfFirstTxn: {
              cardSchemeReferenceId: [],
              paymentId: []
            },
            sequence: []
          }
        },
        paymentId: [],
        processingTerminalId: [],
        refunds: [
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          },
          {
            amount: [],
            currency: [],
            dateTime: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            refundId: [],
            responseCode: [],
            responseMessage: [],
            status: []
          }
        ],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_63,
    Request: {
      Path: /v1/pricing-intents,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_64,
    Request: {
      Path: /v1/pricing-intents,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_65,
    Request: {
      Path: /v1/pricing-intents/{pricingIntentId},
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_66,
    Request: {
      Path: /v1/pricing-intents/{pricingIntentId},
      Methods: [
        PUT
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_67,
    Request: {
      Path: /v1/pricing-intents/{pricingIntentId},
      Methods: [
        PATCH
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_68,
    Request: {
      Path: /v1/pricing-intents/{pricingIntentId},
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_69,
    Request: {
      Path: /v1/processing-accounts/12345,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        businessStartDate: [],
        businessType: [],
        categoryCode: [],
        contactMethods: [
          [],
          [],
          []
        ],
        contacts: [
          {
            contactId: [],
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            }
          },
          {
            contactId: [],
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            }
          },
          {
            contactId: [],
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            }
          }
        ],
        createdDate: [],
        doingBusinessAs: [],
        funding: {
          acceleratedFundingFee: [],
          dailyDiscount: [],
          fundingAccounts: [
            {
              fundingAccountId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: []
            },
            {
              fundingAccountId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: []
            },
            {
              fundingAccountId: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              status: []
            }
          ],
          fundingSchedule: [],
          status: []
        },
        lastModifiedDate: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ],
        merchandiseOrServiceSold: [],
        owners: [
          {
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          },
          {
            firstName: [],
            lastName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            ownerId: []
          }
        ],
        pricing: {
          link: {
            href: [],
            method: [],
            rel: []
          }
        },
        processing: {
          ach: {
            estimatedMonthlyTransactions: [],
            limits: {
              dailyDeposit: [],
              monthlyDeposit: [],
              singleTransaction: []
            },
            naics: [],
            previouslyTerminatedForAch: [],
            refunds: {
              refundPolicyUrl: [],
              writtenRefundPolicy: []
            },
            transactionTypes: [
              [],
              [],
              []
            ],
            transactionTypesOther: []
          },
          cardAcceptance: {
            cardsAccepted: [
              [],
              [],
              []
            ],
            debitOnly: [],
            specialityCards: {
              americanExpressDirect: {
                enabled: [],
                merchantNumber: []
              },
              electronicBenefitsTransfer: {
                enabled: [],
                fnsNumber: []
              },
              other: {
                fleetMerchantId: [],
                voyagerMerchantId: [],
                wexMerchantNumber: []
              }
            }
          },
          isSeasonal: [],
          merchantId: [],
          monthlyAmounts: {
            average: [],
            highest: []
          },
          monthsOfOperation: [
            [],
            [],
            []
          ],
          transactionAmounts: {
            average: [],
            highest: []
          },
          volumeBreakdown: {
            cardPresentKeyed: [],
            cardPresentSwiped: [],
            ecommerce: [],
            mailOrTelephone: []
          }
        },
        processingAccountId: [],
        status: [],
        timezone: [],
        website: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_70,
    Request: {
      Path: /v1/processing-accounts/12345/contacts,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            contactId: [],
            contactMethods: [
              [],
              [],
              []
            ],
            firstName: [],
            identifiers: [
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              }
            ],
            lastName: [],
            middleName: [],
            type: []
          },
          {
            contactId: [],
            contactMethods: [
              [],
              [],
              []
            ],
            firstName: [],
            identifiers: [
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              }
            ],
            lastName: [],
            middleName: [],
            type: []
          },
          {
            contactId: [],
            contactMethods: [
              [],
              [],
              []
            ],
            firstName: [],
            identifiers: [
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              }
            ],
            lastName: [],
            middleName: [],
            type: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_71,
    Request: {
      Path: /v1/processing-accounts/12345/funding-accounts,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: [
        {
          createdDate: [],
          fundingAccountId: [],
          lastModifiedDate: [],
          links: [
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            }
          ],
          nameOnAccount: [],
          paymentMethods: [
            [],
            [],
            []
          ],
          status: [],
          type: [],
          use: []
        },
        {
          createdDate: [],
          fundingAccountId: [],
          lastModifiedDate: [],
          links: [
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            }
          ],
          nameOnAccount: [],
          paymentMethods: [
            [],
            [],
            []
          ],
          status: [],
          type: [],
          use: []
        },
        {
          createdDate: [],
          fundingAccountId: [],
          lastModifiedDate: [],
          links: [
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            },
            {
              href: [],
              method: [],
              rel: []
            }
          ],
          nameOnAccount: [],
          paymentMethods: [
            [],
            [],
            []
          ],
          status: [],
          type: [],
          use: []
        }
      ],
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_72,
    Request: {
      Path: /v1/processing-accounts/12345/owners,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            contactMethods: [
              [],
              [],
              []
            ],
            dateOfBirth: [],
            firstName: [],
            identifiers: [
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              }
            ],
            lastName: [],
            middleName: [],
            ownerId: [],
            relationship: {
              equityPercentage: [],
              isAuthorizedSignatory: [],
              isControlProng: [],
              title: []
            }
          },
          {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            contactMethods: [
              [],
              [],
              []
            ],
            dateOfBirth: [],
            firstName: [],
            identifiers: [
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              }
            ],
            lastName: [],
            middleName: [],
            ownerId: [],
            relationship: {
              equityPercentage: [],
              isAuthorizedSignatory: [],
              isControlProng: [],
              title: []
            }
          },
          {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            contactMethods: [
              [],
              [],
              []
            ],
            dateOfBirth: [],
            firstName: [],
            identifiers: [
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              },
              {
                type: [],
                value: []
              }
            ],
            lastName: [],
            middleName: [],
            ownerId: [],
            relationship: {
              equityPercentage: [],
              isAuthorizedSignatory: [],
              isControlProng: [],
              title: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_73,
    Request: {
      Path: /v1/processing-accounts/12345/pricing,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_74,
    Request: {
      Path: /v1/processing-accounts/12345/reminders,
      Methods: [
        POST
      ],
      Body: {}
    },
    Response: {
      StatusCode: 201,
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_75,
    Request: {
      Path: /v1/processing-terminals/example-string/payment-plans,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "paymentPlanId": "example-string",
  "processingTerminalId": "example-string",
  "name": "example-string",
  "description": "example-string",
  "currency": "AED",
  "setupOrder": {
    "amount": 42,
    "description": "example-string",
    "breakdown": {
      "subtotal": 42,
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ]
    }
  },
  "recurringOrder": {
    "amount": 42,
    "description": "example-string",
    "breakdown": {
      "subtotal": 42,
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ]
    }
  },
  "length": 42,
  "type": "manual",
  "frequency": "weekly",
  "onUpdate": "update",
  "onDelete": "complete"
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        currency: [],
        description: [],
        frequency: [],
        length: [],
        name: [],
        onDelete: [],
        onUpdate: [],
        paymentPlanId: [],
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        type: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_76,
    Request: {
      Path: /v1/processing-terminals/example-string/payment-plans,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            currency: [],
            description: [],
            frequency: [],
            length: [],
            name: [],
            onDelete: [],
            onUpdate: [],
            paymentPlanId: [],
            processingTerminalId: [],
            recurringOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            setupOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            type: []
          },
          {
            currency: [],
            description: [],
            frequency: [],
            length: [],
            name: [],
            onDelete: [],
            onUpdate: [],
            paymentPlanId: [],
            processingTerminalId: [],
            recurringOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            setupOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            type: []
          },
          {
            currency: [],
            description: [],
            frequency: [],
            length: [],
            name: [],
            onDelete: [],
            onUpdate: [],
            paymentPlanId: [],
            processingTerminalId: [],
            recurringOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            setupOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            type: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_77,
    Request: {
      Path: /v1/processing-terminals/example-string/payment-plans/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        currency: [],
        description: [],
        frequency: [],
        length: [],
        name: [],
        onDelete: [],
        onUpdate: [],
        paymentPlanId: [],
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_78,
    Request: {
      Path: /v1/processing-terminals/example-string/payment-plans/example-string,
      Methods: [
        PATCH
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
[
  {
    "op": "add",
    "path": "/a/b/c",
    "value": [
      "dog",
      "cat"
    ]
  },
  {
    "op": "remove",
    "path": "/a/b/c"
  },
  {
    "op": "replace",
    "path": "/a/b/c",
    "value": "42"
  },
  {
    "op": "move",
    "from": "/a/b/c",
    "path": "/a/b/d"
  },
  {
    "op": "copy",
    "from": "/a/b/d",
    "path": "/a/b/e"
  },
  {
    "op": "test",
    "path": "/a/b/c",
    "value": "dog"
  }
],
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        currency: [],
        description: [],
        frequency: [],
        length: [],
        name: [],
        onDelete: [],
        onUpdate: [],
        paymentPlanId: [],
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_79,
    Request: {
      Path: /v1/processing-terminals/example-string/payment-plans/example-string,
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_80,
    Request: {
      Path: /v1/processing-terminals/example-string/secure-tokens,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "secureTokenId": "example-string",
  "operator": "example-string",
  "mitAgreement": "unscheduled",
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "ipAddress": {
    "type": "ipv4",
    "value": "example-string"
  },
  "source": {},
  "threeDSecure": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        mitAgreement: [],
        processingTerminalId: [],
        secureTokenId: [],
        status: [],
        token: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_81,
    Request: {
      Path: /v1/processing-terminals/example-string/secure-tokens,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            mitAgreement: [],
            processingTerminalId: [],
            secureTokenId: [],
            status: [],
            token: []
          },
          {
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            mitAgreement: [],
            processingTerminalId: [],
            secureTokenId: [],
            status: [],
            token: []
          },
          {
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            mitAgreement: [],
            processingTerminalId: [],
            secureTokenId: [],
            status: [],
            token: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_82,
    Request: {
      Path: /v1/processing-terminals/example-string/secure-tokens/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        mitAgreement: [],
        processingTerminalId: [],
        secureTokenId: [],
        status: [],
        token: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_83,
    Request: {
      Path: /v1/processing-terminals/example-string/secure-tokens/example-string,
      Methods: [
        PATCH
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
[
  {
    "op": "add",
    "path": "/a/b/c",
    "value": [
      "dog",
      "cat"
    ]
  },
  {
    "op": "remove",
    "path": "/a/b/c"
  },
  {
    "op": "replace",
    "path": "/a/b/c",
    "value": "42"
  },
  {
    "op": "move",
    "from": "/a/b/c",
    "path": "/a/b/d"
  },
  {
    "op": "copy",
    "from": "/a/b/d",
    "path": "/a/b/e"
  },
  {
    "op": "test",
    "path": "/a/b/c",
    "value": "dog"
  }
],
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        mitAgreement: [],
        processingTerminalId: [],
        secureTokenId: [],
        status: [],
        token: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_84,
    Request: {
      Path: /v1/processing-terminals/example-string/secure-tokens/example-string,
      Methods: [
        DELETE
      ],
      Body: {}
    },
    Response: {
      StatusCode: 204
    }
  },
  {
    Guid: Guid_85,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "subscriptionId": "example-string",
  "paymentPlanId": "example-string",
  "paymentMethod": {},
  "name": "example-string",
  "description": "example-string",
  "setupOrder": {
    "amount": 42,
    "description": "example-string",
    "breakdown": {
      "subtotal": 42,
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ]
    },
    "orderId": "example-string"
  },
  "recurringOrder": {
    "amount": 42,
    "description": "example-string",
    "breakdown": {
      "subtotal": 42,
      "taxes": [
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        },
        {
          "name": "example-string",
          "rate": 2.2,
          "amount": 42
        }
      ]
    }
  },
  "startDate": "2024-06-19",
  "endDate": "2024-06-19",
  "length": 42,
  "pauseCollectionFor": 42
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        currency: [],
        currentState: {
          nextDueDate: [],
          outstandingInvoices: [],
          paidInvoices: [],
          status: []
        },
        description: [],
        endDate: [],
        frequency: [],
        length: [],
        name: [],
        pauseCollectionFor: [],
        paymentPlan: {
          link: {
            href: [],
            method: [],
            rel: []
          },
          name: [],
          paymentPlanId: []
        },
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        secureToken: {
          customerName: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          secureTokenId: [],
          status: [],
          token: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: [],
          orderId: []
        },
        startDate: [],
        subscriptionId: [],
        type: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_86,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            currency: [],
            currentState: {
              nextDueDate: [],
              outstandingInvoices: [],
              paidInvoices: [],
              status: []
            },
            description: [],
            endDate: [],
            frequency: [],
            length: [],
            name: [],
            pauseCollectionFor: [],
            paymentPlan: {
              link: {
                href: [],
                method: [],
                rel: []
              },
              name: [],
              paymentPlanId: []
            },
            processingTerminalId: [],
            recurringOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            secureToken: {
              customerName: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              secureTokenId: [],
              status: [],
              token: []
            },
            setupOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: [],
              orderId: []
            },
            startDate: [],
            subscriptionId: [],
            type: []
          },
          {
            currency: [],
            currentState: {
              nextDueDate: [],
              outstandingInvoices: [],
              paidInvoices: [],
              status: []
            },
            description: [],
            endDate: [],
            frequency: [],
            length: [],
            name: [],
            pauseCollectionFor: [],
            paymentPlan: {
              link: {
                href: [],
                method: [],
                rel: []
              },
              name: [],
              paymentPlanId: []
            },
            processingTerminalId: [],
            recurringOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            secureToken: {
              customerName: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              secureTokenId: [],
              status: [],
              token: []
            },
            setupOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: [],
              orderId: []
            },
            startDate: [],
            subscriptionId: [],
            type: []
          },
          {
            currency: [],
            currentState: {
              nextDueDate: [],
              outstandingInvoices: [],
              paidInvoices: [],
              status: []
            },
            description: [],
            endDate: [],
            frequency: [],
            length: [],
            name: [],
            pauseCollectionFor: [],
            paymentPlan: {
              link: {
                href: [],
                method: [],
                rel: []
              },
              name: [],
              paymentPlanId: []
            },
            processingTerminalId: [],
            recurringOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: []
            },
            secureToken: {
              customerName: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              secureTokenId: [],
              status: [],
              token: []
            },
            setupOrder: {
              amount: [],
              breakdown: {
                subtotal: [],
                taxes: [
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  },
                  {
                    amount: [],
                    name: [],
                    rate: []
                  }
                ]
              },
              description: [],
              orderId: []
            },
            startDate: [],
            subscriptionId: [],
            type: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_87,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        currency: [],
        currentState: {
          nextDueDate: [],
          outstandingInvoices: [],
          paidInvoices: [],
          status: []
        },
        description: [],
        endDate: [],
        frequency: [],
        length: [],
        name: [],
        pauseCollectionFor: [],
        paymentPlan: {
          link: {
            href: [],
            method: [],
            rel: []
          },
          name: [],
          paymentPlanId: []
        },
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        secureToken: {
          customerName: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          secureTokenId: [],
          status: [],
          token: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: [],
          orderId: []
        },
        startDate: [],
        subscriptionId: [],
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_88,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions/example-string,
      Methods: [
        PATCH
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
[
  {
    "op": "add",
    "path": "/a/b/c",
    "value": [
      "dog",
      "cat"
    ]
  },
  {
    "op": "remove",
    "path": "/a/b/c"
  },
  {
    "op": "replace",
    "path": "/a/b/c",
    "value": "42"
  },
  {
    "op": "move",
    "from": "/a/b/c",
    "path": "/a/b/d"
  },
  {
    "op": "copy",
    "from": "/a/b/d",
    "path": "/a/b/e"
  },
  {
    "op": "test",
    "path": "/a/b/c",
    "value": "dog"
  }
],
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        currency: [],
        currentState: {
          nextDueDate: [],
          outstandingInvoices: [],
          paidInvoices: [],
          status: []
        },
        description: [],
        endDate: [],
        frequency: [],
        length: [],
        name: [],
        pauseCollectionFor: [],
        paymentPlan: {
          link: {
            href: [],
            method: [],
            rel: []
          },
          name: [],
          paymentPlanId: []
        },
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        secureToken: {
          customerName: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          secureTokenId: [],
          status: [],
          token: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: [],
          orderId: []
        },
        startDate: [],
        subscriptionId: [],
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_89,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions/example-string/deactivate,
      Methods: [
        POST
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        currency: [],
        currentState: {
          nextDueDate: [],
          outstandingInvoices: [],
          paidInvoices: [],
          status: []
        },
        description: [],
        endDate: [],
        frequency: [],
        length: [],
        name: [],
        pauseCollectionFor: [],
        paymentPlan: {
          link: {
            href: [],
            method: [],
            rel: []
          },
          name: [],
          paymentPlanId: []
        },
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        secureToken: {
          customerName: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          secureTokenId: [],
          status: [],
          token: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: [],
          orderId: []
        },
        startDate: [],
        subscriptionId: [],
        type: []
      },
      Headers: {
        Content-Type: application/problem+json
      }
    }
  },
  {
    Guid: Guid_90,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions/example-string/pay,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ]
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        currentState: {
          nextDueDate: [],
          outstandingInvoices: [],
          paidInvoices: [],
          status: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        secureToken: {
          customerName: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          secureTokenId: [],
          status: [],
          token: []
        },
        subscriptionId: []
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_91,
    Request: {
      Path: /v1/processing-terminals/example-string/subscriptions/example-string/reactivate,
      Methods: [
        POST
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        currency: [],
        currentState: {
          nextDueDate: [],
          outstandingInvoices: [],
          paidInvoices: [],
          status: []
        },
        description: [],
        endDate: [],
        frequency: [],
        length: [],
        name: [],
        pauseCollectionFor: [],
        paymentPlan: {
          link: {
            href: [],
            method: [],
            rel: []
          },
          name: [],
          paymentPlanId: []
        },
        processingTerminalId: [],
        recurringOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: []
        },
        secureToken: {
          customerName: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          secureTokenId: [],
          status: [],
          token: []
        },
        setupOrder: {
          amount: [],
          breakdown: {
            subtotal: [],
            taxes: [
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              },
              {
                amount: [],
                name: [],
                rate: []
              }
            ]
          },
          description: [],
          orderId: []
        },
        startDate: [],
        subscriptionId: [],
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_92,
    Request: {
      Path: /v1/refund-instructions/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        errorMessage: [],
        link: {
          href: [],
          method: [],
          rel: []
        },
        refundInstructionId: [],
        status: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_93,
    Request: {
      Path: /v1/refunds,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "channel": "pos",
  "processingTerminalId": "example-string",
  "operator": "example-string",
  "order": {
    "orderId": "example-string",
    "dateTime": "2024-06-19T12:34:56.000+00:00",
    "description": "example-string",
    "amount": 42,
    "currency": "AED",
    "dccOffer": {
      "accepted": true,
      "offerReference": "example-string",
      "fxAmount": 42,
      "fxCurrency": "AED",
      "fxCurrencyCode": "example-string",
      "fxCurrencyExponent": 42,
      "fxRate": 2.2,
      "markup": 2.2,
      "markupText": "example-string",
      "provider": "example-string",
      "source": "example-string"
    }
  },
  "customer": {
    "firstName": "example-string",
    "lastName": "example-string",
    "dateOfBirth": "2024-06-19",
    "referenceNumber": "example-string",
    "billingAddress": {
      "address1": "1 Example Ave.",
      "address2": "Example Address Line 2",
      "address3": "Example Address Line 3",
      "city": "Chicago",
      "state": "Illinois",
      "country": "US",
      "postalCode": "60056"
    },
    "shippingAddress": {
      "recipientName": "example-string",
      "address": {
        "address1": "1 Example Ave.",
        "address2": "Example Address Line 2",
        "address3": "Example Address Line 3",
        "city": "Chicago",
        "state": "Illinois",
        "country": "US",
        "postalCode": "60056"
      }
    },
    "contactMethods": [
      null,
      null,
      null
    ],
    "notificationLanguage": "en"
  },
  "ipAddress": {
    "type": "ipv4",
    "value": "example-string"
  },
  "refundMethod": {}
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 201,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json,
        location: example-string
      }
    }
  },
  {
    Guid: Guid_94,
    Request: {
      Path: /v1/refunds,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            card: {
              balances: [
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                }
              ],
              cardholderName: [],
              cardholderSignature: [],
              cardNumber: [],
              emvTags: [
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                }
              ],
              entryMethod: [],
              expiryDate: [],
              secureToken: {
                customerName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                secureTokenId: [],
                status: [],
                token: []
              },
              securityChecks: {
                avsResult: [],
                cvvResult: []
              },
              type: []
            },
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            operator: [],
            order: {
              amount: [],
              currency: [],
              dateTime: [],
              dccOffer: {
                accepted: [],
                fxAmount: [],
                fxCurrency: [],
                fxCurrencyCode: [],
                fxCurrencyExponent: [],
                fxRate: [],
                markup: [],
                markupText: [],
                offerReference: [],
                provider: [],
                source: []
              },
              description: [],
              orderId: []
            },
            payment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            processingTerminalId: [],
            refundId: [],
            supportedOperations: [
              [],
              [],
              []
            ],
            transactionResult: {
              approvalCode: [],
              authorizedAmount: [],
              cardSchemeReferenceId: [],
              currency: [],
              ebtType: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            card: {
              balances: [
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                }
              ],
              cardholderName: [],
              cardholderSignature: [],
              cardNumber: [],
              emvTags: [
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                }
              ],
              entryMethod: [],
              expiryDate: [],
              secureToken: {
                customerName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                secureTokenId: [],
                status: [],
                token: []
              },
              securityChecks: {
                avsResult: [],
                cvvResult: []
              },
              type: []
            },
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            operator: [],
            order: {
              amount: [],
              currency: [],
              dateTime: [],
              dccOffer: {
                accepted: [],
                fxAmount: [],
                fxCurrency: [],
                fxCurrencyCode: [],
                fxCurrencyExponent: [],
                fxRate: [],
                markup: [],
                markupText: [],
                offerReference: [],
                provider: [],
                source: []
              },
              description: [],
              orderId: []
            },
            payment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            processingTerminalId: [],
            refundId: [],
            supportedOperations: [
              [],
              [],
              []
            ],
            transactionResult: {
              approvalCode: [],
              authorizedAmount: [],
              cardSchemeReferenceId: [],
              currency: [],
              ebtType: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          },
          {
            card: {
              balances: [
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                },
                {
                  amount: [],
                  benefitCategory: [],
                  currency: []
                }
              ],
              cardholderName: [],
              cardholderSignature: [],
              cardNumber: [],
              emvTags: [
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                },
                {
                  hex: [],
                  value: []
                }
              ],
              entryMethod: [],
              expiryDate: [],
              secureToken: {
                customerName: [],
                link: {
                  href: [],
                  method: [],
                  rel: []
                },
                secureTokenId: [],
                status: [],
                token: []
              },
              securityChecks: {
                avsResult: [],
                cvvResult: []
              },
              type: []
            },
            customer: {
              billingAddress: {
                address1: [],
                address2: [],
                address3: [],
                city: [],
                country: [],
                postalCode: [],
                state: []
              },
              contactMethods: [
                [],
                [],
                []
              ],
              dateOfBirth: [],
              firstName: [],
              lastName: [],
              notificationLanguage: [],
              referenceNumber: [],
              shippingAddress: {
                address: {
                  address1: [],
                  address2: [],
                  address3: [],
                  city: [],
                  country: [],
                  postalCode: [],
                  state: []
                },
                recipientName: []
              }
            },
            operator: [],
            order: {
              amount: [],
              currency: [],
              dateTime: [],
              dccOffer: {
                accepted: [],
                fxAmount: [],
                fxCurrency: [],
                fxCurrencyCode: [],
                fxCurrencyExponent: [],
                fxRate: [],
                markup: [],
                markupText: [],
                offerReference: [],
                provider: [],
                source: []
              },
              description: [],
              orderId: []
            },
            payment: {
              amount: [],
              currency: [],
              dateTime: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              paymentId: [],
              responseCode: [],
              responseMessage: [],
              status: []
            },
            processingTerminalId: [],
            refundId: [],
            supportedOperations: [
              [],
              [],
              []
            ],
            transactionResult: {
              approvalCode: [],
              authorizedAmount: [],
              cardSchemeReferenceId: [],
              currency: [],
              ebtType: [],
              processorResponseCode: [],
              responseCode: [],
              responseMessage: [],
              status: [],
              type: []
            }
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_95,
    Request: {
      Path: /v1/refunds/example-string,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_96,
    Request: {
      Path: /v1/refunds/example-string/adjust,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {
        Matcher: {
          Name: JsonMatcher,
          Pattern:
{
  "operator": "example-string",
  "adjustments": [
    null,
    null,
    null
  ]
},
          IgnoreCase: true
        }
      }
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_97,
    Request: {
      Path: /v1/refunds/example-string/reverse,
      Methods: [
        POST
      ],
      Headers: [
        {
          Name: Idempotency-Key,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: example-string,
              IgnoreCase: true
            }
          ],
          IgnoreCase: true
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        card: {
          balances: [
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            },
            {
              amount: [],
              benefitCategory: [],
              currency: []
            }
          ],
          cardholderName: [],
          cardholderSignature: [],
          cardNumber: [],
          emvTags: [
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            },
            {
              hex: [],
              value: []
            }
          ],
          entryMethod: [],
          expiryDate: [],
          secureToken: {
            customerName: [],
            link: {
              href: [],
              method: [],
              rel: []
            },
            secureTokenId: [],
            status: [],
            token: []
          },
          securityChecks: {
            avsResult: [],
            cvvResult: []
          },
          type: []
        },
        customer: {
          billingAddress: {
            address1: [],
            address2: [],
            address3: [],
            city: [],
            country: [],
            postalCode: [],
            state: []
          },
          contactMethods: [
            [],
            [],
            []
          ],
          dateOfBirth: [],
          firstName: [],
          lastName: [],
          notificationLanguage: [],
          referenceNumber: [],
          shippingAddress: {
            address: {
              address1: [],
              address2: [],
              address3: [],
              city: [],
              country: [],
              postalCode: [],
              state: []
            },
            recipientName: []
          }
        },
        operator: [],
        order: {
          amount: [],
          currency: [],
          dateTime: [],
          dccOffer: {
            accepted: [],
            fxAmount: [],
            fxCurrency: [],
            fxCurrencyCode: [],
            fxCurrencyExponent: [],
            fxRate: [],
            markup: [],
            markupText: [],
            offerReference: [],
            provider: [],
            source: []
          },
          description: [],
          orderId: []
        },
        payment: {
          amount: [],
          currency: [],
          dateTime: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          paymentId: [],
          responseCode: [],
          responseMessage: [],
          status: []
        },
        processingTerminalId: [],
        refundId: [],
        supportedOperations: [
          [],
          [],
          []
        ],
        transactionResult: {
          approvalCode: [],
          authorizedAmount: [],
          cardSchemeReferenceId: [],
          currency: [],
          ebtType: [],
          processorResponseCode: [],
          responseCode: [],
          responseMessage: [],
          status: [],
          type: []
        }
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_98,
    Request: {
      Path: /v1/transactions,
      Methods: [
        GET
      ],
      Params: [
        {
          Name: date,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 2024-06-19,
              IgnoreCase: true
            }
          ]
        },
        {
          Name: batchId,
          IgnoreCase: true,
          Matchers: [
            {
              Name: ExactMatcher,
              Pattern: 42,
              IgnoreCase: true
            }
          ]
        }
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        count: [],
        data: [
          {
            amount: [],
            authorization: {
              amount: [],
              authorizationId: [],
              avsResponseCode: [],
              code: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            batch: {
              batchId: [],
              cycle: [],
              date: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            cashbackAmount: [],
            createdDate: [],
            currency: [],
            date: [],
            entryMethod: [],
            interchange: {
              basisPoint: [],
              transactionFee: []
            },
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            settled: {
              achDate: [],
              settledBy: []
            },
            status: [],
            transactionId: [],
            type: []
          },
          {
            amount: [],
            authorization: {
              amount: [],
              authorizationId: [],
              avsResponseCode: [],
              code: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            batch: {
              batchId: [],
              cycle: [],
              date: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            cashbackAmount: [],
            createdDate: [],
            currency: [],
            date: [],
            entryMethod: [],
            interchange: {
              basisPoint: [],
              transactionFee: []
            },
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            settled: {
              achDate: [],
              settledBy: []
            },
            status: [],
            transactionId: [],
            type: []
          },
          {
            amount: [],
            authorization: {
              amount: [],
              authorizationId: [],
              avsResponseCode: [],
              code: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            batch: {
              batchId: [],
              cycle: [],
              date: [],
              link: {
                href: [],
                method: [],
                rel: []
              }
            },
            card: {
              avsRequest: [],
              avsResponse: [],
              cardNumber: [],
              cvvPresenceIndicator: [],
              type: []
            },
            cashbackAmount: [],
            createdDate: [],
            currency: [],
            date: [],
            entryMethod: [],
            interchange: {
              basisPoint: [],
              transactionFee: []
            },
            lastModifiedDate: [],
            merchant: {
              doingBusinessAs: [],
              link: {
                href: [],
                method: [],
                rel: []
              },
              merchantId: []
            },
            settled: {
              achDate: [],
              settledBy: []
            },
            status: [],
            transactionId: [],
            type: []
          }
        ],
        hasMore: [],
        limit: [],
        links: [
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          },
          {
            href: [],
            method: [],
            rel: []
          }
        ]
      },
      Headers: {
        Content-Type: application/json
      }
    }
  },
  {
    Guid: Guid_99,
    Request: {
      Path: /v1/transactions/12345,
      Methods: [
        GET
      ],
      Body: {}
    },
    Response: {
      StatusCode: 200,
      BodyAsJson: {
        amount: [],
        authorization: {
          amount: [],
          authorizationId: [],
          avsResponseCode: [],
          code: [],
          link: {
            href: [],
            method: [],
            rel: []
          }
        },
        batch: {
          batchId: [],
          cycle: [],
          date: [],
          link: {
            href: [],
            method: [],
            rel: []
          }
        },
        card: {
          avsRequest: [],
          avsResponse: [],
          cardNumber: [],
          cvvPresenceIndicator: [],
          type: []
        },
        cashbackAmount: [],
        createdDate: [],
        currency: [],
        date: [],
        entryMethod: [],
        interchange: {
          basisPoint: [],
          transactionFee: []
        },
        lastModifiedDate: [],
        merchant: {
          doingBusinessAs: [],
          link: {
            href: [],
            method: [],
            rel: []
          },
          merchantId: []
        },
        settled: {
          achDate: [],
          settledBy: []
        },
        status: [],
        transactionId: [],
        type: []
      },
      Headers: {
        Content-Type: application/json
      }
    }
  }
]